{"ast":null,"code":"var _jsxFileName = \"/Users/rcliang/Documents/GitHub/Classes/react-test/src/TodoList.js\";\nimport React from 'react'; // import './TodoList.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoList() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TodoForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n} // class TodoTable extends React.Component {\n// }\n\n_c = TodoList;\n\nclass TodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskName: '',\n      taskDescription: '',\n      tasks: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var myHeaders = new Headers();\n    myHeaders.append('Content-Type', 'application/json');\n    var raw = JSON.stringify({\n      'taskName': this.state.TodoTable,\n      'taskDescription': this.state.taskDescription,\n      'userId': 1\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch('http://localhost:3000/api/todos', requestOptions).then(response => response.json()).then(result => {\n      const tasks = this.state.tasks;\n      tasks.push(result);\n      this.setState({\n        tasks\n      });\n    }).catch(error => console.log('error', error));\n  }\n\n  getTodos(userId) {\n    var raw = JSON.stringify({\n      'userId': userId\n    });\n    var myHeaders = new Headers();\n    myHeaders.append('Content-Type', 'application/json');\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch('http://localhost:3000/api/todos', requestOptions).then(response => {\n      console.log(response);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Todos \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"taskName\",\n        type: \"textarea\",\n        value: this.state.taskName,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"taskDescription\",\n        type: \"textarea\",\n        value: this.state.taskDescription,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        onClick: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/rcliang/Documents/GitHub/Classes/react-test/src/TodoList.js"],"names":["React","TodoList","TodoForm","Component","constructor","props","state","taskName","taskDescription","tasks","handleSubmit","bind","handleInputChange","event","target","setState","name","value","preventDefault","myHeaders","Headers","append","raw","JSON","stringify","TodoTable","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","push","catch","error","console","log","getTodos","userId","render"],"mappings":"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","sourcesContent":["import React from 'react';\n// import './TodoList.css'\n\nexport default function TodoList() {\n  return (\n    <div>\n      <TodoForm />\n      {/* <TodoTable /> */}\n    </div>\n  );\n}\n\n// class TodoTable extends React.Component {\n\n// }\n\nclass TodoForm extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      taskName: '',\n      taskDescription: '',\n      tasks: [],\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n \n  handleInputChange(event) {\n    const target = event.target;\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    var myHeaders = new Headers();\n    myHeaders.append('Content-Type', 'application/json');\n    \n    var raw = JSON.stringify({\n      'taskName': this.state.TodoTable,\n      'taskDescription': this.state.taskDescription,\n      'userId': 1\n    });\n    \n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    \n    fetch('http://localhost:3000/api/todos', requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        const tasks = this.state.tasks;\n        tasks.push(result);\n        this.setState({tasks});\n      })\n      .catch(error => console.log('error', error));\n  }\n\n  getTodos(userId) {\n    var raw = JSON.stringify({\n      'userId': userId\n    });\n\n    var myHeaders = new Headers();\n    myHeaders.append('Content-Type', 'application/json');\n    \n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    }; \n\n    fetch('http://localhost:3000/api/todos', requestOptions)\n      .then(response => {\n        console.log(response);\n      });\n  }\n\n  render() {\n    return (\n      <form>\n        <h1> Todos </h1>\n        <input \n          name='taskName'\n          type='textarea'\n          value={this.state.taskName} \n          onChange={this.handleInputChange} \n        />\n        <input \n          name='taskDescription'\n          type='textarea'\n          value={this.state.taskDescription} \n          onChange={this.handleInputChange} \n        />\n        <input type='submit' value='Submit' onClick={this.handleSubmit} />\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}